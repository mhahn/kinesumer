package kinesumer

// These are the error levels for an Error.
const (
	// Values "crit" and "error" mean something unrecoverable has occurred (such as a goroutine panicking).
	ECrit  = "crit"
	EError = "error"
	EWarn  = "warn"
	EInfo  = "info"
	EDebug = "debug"
)

// All errors generated by Kinesumer will be wrapped into an Error object.
type Error struct {
	severity string
	message  string
	origin   error
}

// Creates a new Error.
func NewError(severity, message string, origin error) *Error {
	return &Error{
		severity: severity,
		message:  message,
		origin:   origin,
	}
}

// Gets the error level. Possible values are listed in Constants.
func (e *Error) Severity() string {
	return e.severity
}

// If the error originated from an external library then this will give you the original error.
func (e *Error) Origin() error {
	return e.origin
}

// Generates a string that describes the error.
func (e *Error) Error() string {
	if e.origin == nil {
		return e.message
	} else {
		return e.message + ": " + e.origin.Error()
	}
}
